import type { NextPage } from "next";
import { useEffect, useState } from "react";
import Head from "next/head";
import Image from "next/image";
import axios from "axios";
import LocationListing from "../../components/LocationListing";
import HeaderComponent from "../../components/HeaderComponent";
import LocationCard from "../../components/LocationCard";
interface LocationObject {
  c_locationName: String;
}

export default function Index({ locations }: any) {
  const [favoriteLocation, setfavoriteLocation] = useState(null);
  const [favoriteLocationBannerClass, setfavoriteLocationBannerClass] = useState("expanded");

  const [favoriteLocationDetails, setFavoriteLocationDetails] = useState({});
  useEffect(() => {
    const locationId = localStorage.favoriteLocation;
    setfavoriteLocation(locationId);
    setFavoriteLocationDetails(locations.find((location) => location.c_oloId === locationId));
    setfavoriteLocationBannerClass(localStorage.favoriteLocationBannerClass ? localStorage.favoriteLocationBannerClass : "expanded");
    localStorage.favoriteLocationBannerClass = favoriteLocationBannerClass;
  }, [setfavoriteLocation, favoriteLocationBannerClass]);

  function handleChange(newValue) {
    setfavoriteLocation(newValue);
    const myFavoriteLocation = locations.find((location) => location.c_oloId === newValue);
    setFavoriteLocationDetails(myFavoriteLocation);
    if (typeof window != undefined) {
      localStorage.favoriteLocation = newValue;
    }
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link rel="stylesheet" href="https://hootswings.com/_assets/css/styles.css?v=1631911755" />
      </Head>
      <HeaderComponent favoriteLocation={favoriteLocationDetails} bannerClass={favoriteLocationBannerClass} />

      <main>


        {locations.map((location) => (
          <LocationCard
            locationDetail={location}
            key={location.c_oloId}
            onChange={handleChange}
            // handleLocationUpdate={this.onLocationChange}
            isFavorite={favoriteLocation === location.c_oloId}
            // favoriteLocation={this.props.favoriteLocation}
          />
        ))}
      </main>
    </>
  );
}

export async function getStaticProps({}) {
  const res =
    (await axios({
      url: "https://hoots-backend.herokuapp.com/api/graphql",
      method: "POST",
      data: {
        query: `query Locations {
        locations(where: {isVisible: {equals: true}}) {
          id,
          c_locationName,
          c_locationSlug,
          address,
          addressLine2,
          city,
          region,
          postalCode,
          mainPhone,
          c_mapUrl,
          orderUrl,
          description,
          c_oloId
        }
      }`,
      },
    })) || [];

    console.log(res.data.data.locations)
  return {
    props: {
      locations: res.data.data.locations,
    },
  };
}
